{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastKeyPressed","keyPress","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,eAAgB,IAFpB,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,eAAgBE,EAAME,OAd1C,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,YAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,YAV/C,oBAiBE,WACE,IAAQD,EAAmBO,KAAKR,MAAxBC,eAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,4CAAyDT,GAAkB,0BAA3E,aAtBR,GAAyBU,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.6207a117.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    lastKeyPressed: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyPress);\n  }\n\n  keyPress = (event: KeyboardEvent) => {\n    this.setState({ lastKeyPressed: event.key });\n  };\n\n  render() {\n    const { lastKeyPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{`The last pressed key is [${lastKeyPressed || 'Nothing was pressed yet'}]`}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
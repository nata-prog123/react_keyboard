{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastKeyAp","keyPress","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,UAAW,2BAFf,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,UAAWE,EAAME,OAdrC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,YAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,YAV/C,oBAiBE,WACE,IAAQD,EAAcO,KAAKR,MAAnBC,UAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,4CAAyDT,EAAzD,aAtBR,GAAyBU,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.fd2498c5.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    lastKeyAp: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyPress);\n  }\n\n  keyPress = (event: KeyboardEvent) => {\n    this.setState({ lastKeyAp: event.key });\n  };\n\n  render() {\n    const { lastKeyAp } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{`The last pressed key is [${lastKeyAp}]`}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}